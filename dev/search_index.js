var documenterSearchIndex = {"docs":
[{"location":"multithreading/#Multi-threading","page":"Multi threading","title":"Multi threading","text":"","category":"section"},{"location":"multithreading/","page":"Multi threading","title":"Multi threading","text":"srun --qos=np --nodes=1 --ntasks-per-node=1 --cpus-per-task=256 --pty bash -i","category":"page"},{"location":"multithreading/","page":"Multi threading","title":"Multi threading","text":"Start julia with julia --threads=auto or julia --threads=N  ","category":"page"},{"location":"multithreading/","page":"Multi threading","title":"Multi threading","text":"julia> function readall(files) \n           dfs=DataFrame[]\n           Threads.@threads for file in files\n              push!(dfs, read_v(file,select=[:ID,:TT,:DD,:FF]))\n           end; \n           return dfs \n       end","category":"page"},{"location":"multithreading/","page":"Multi threading","title":"Multi threading","text":"julia> files = glob(\"vfld*\", \"/scratch/fai/vfld/SPP_DP\")\njulia> @benchmark dfs = readall(files)","category":"page"},{"location":"multithreading/","page":"Multi threading","title":"Multi threading","text":"BenchmarkTools.Trial: 5 samples with 1 evaluation.\n Range (min … max):  980.453 ms …   1.168 s  ┊ GC (min … max): 0.00% … 0.00%\n Time  (median):        1.110 s              ┊ GC (median):    0.00%\n Time  (mean ± σ):      1.092 s ± 74.973 ms  ┊ GC (mean ± σ):  0.00% ± 0.00%\n\n  █                       █                █          █      █  \n  █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█▁▁▁▁▁▁▁▁▁▁█▁▁▁▁▁▁█ ▁\n  980 ms          Histogram: frequency by time          1.17 s <\n\n Memory estimate: 5.14 GiB, allocs estimate: 39591794.","category":"page"},{"location":"sqlite/#Creating-Sqlite-databases","page":"Creating Sqlite databases","title":"Creating Sqlite databases","text":"","category":"section"},{"location":"sqlite/","page":"Creating Sqlite databases","title":"Creating Sqlite databases","text":"using Sqlite\ndb = SQLite.DB()\nread_v(file) |> SQLite.load!(db, \"synop\")","category":"page"},{"location":"read/#Reading","page":"Reading","title":"Reading","text":"","category":"section"},{"location":"read/#Single-file","page":"Reading","title":"Single file","text":"","category":"section"},{"location":"read/","page":"Reading","title":"Reading","text":"To read a single vobs or  vfld file ","category":"page"},{"location":"read/","page":"Reading","title":"Reading","text":"myshow(df) = show(df,truncate=10,show_row_number=false, display_size = (21, 90),maximum_columns_width = 15) ","category":"page"},{"location":"read/","page":"Reading","title":"Reading","text":"using VfldFiles, Glob\n\nvfldfile = \"assets/vfldMEPS_prodmbr000201902170027\"\n\n@show basename(vfldfile)\n\ndf = read_v(vfldfile, select=[:ID,:TT])\n\nmyshow(df) #hide","category":"page"},{"location":"read/#Multiple-files-reduce-vcat","page":"Reading","title":"Multiple files reduce vcat","text":"","category":"section"},{"location":"read/","page":"Reading","title":"Reading","text":"Or use reduce  and vcat to vertically concatenate dataframes.  Note in  read_v. the . will broadcast the read_v function over the vfldfiles array","category":"page"},{"location":"read/","page":"Reading","title":"Reading","text":"df = reduce(vcat, read_v.([vfldfile vfldfile],select=[:ID,:TT]))\n\nmyshow(df) #hide","category":"page"},{"location":"read/","page":"Reading","title":"Reading","text":"note: Note\nAnalysis dataframe has leadtime==missing forecast 00  leadtime==Hour(0) vfldSPP_DPmbr00020221101002083×7 DataFrame\n  Row │ validtime            leadtime  basetime             mbr     exp     ID       TT      \n      │ DateTime             Missing   DateTime             String  String  Int64    Float64 \n──────┼──────────────────────────────────────────────────────────────────────────────────────\n    1 │ 2022-11-01T00:00:00   missing  2022-11-01T00:00:00  mbr000  SPP_DP     1001  277.038\n    2 │ 2022-11-01T00:00:00   missing  2022-11-01T00:00:00  mbr000  SPP_DP     1010  281.141\n    3 │ 2022-11-01T00:00:00   missing  2022-11-01T00:00:00  mbr000  SPP_DP     1014  276.542\n    4 │ 2022-11-01T00:00:00   missing  2022-11-01T00:00:00  mbr000  SPP_DP     1015  279.33vfldSPP_DPmbr0002022110100002083×7 DataFrame\n  Row │ validtime            leadtime  basetime             mbr     exp     ID       TT      \n      │ DateTime             Hour      DateTime             String  String  Int64    Float64 \n──────┼──────────────────────────────────────────────────────────────────────────────────────\n    1 │ 2022-11-01T00:00:00  0 hours   2022-11-01T00:00:00  mbr000  SPP_DP     1001  276.363\n    2 │ 2022-11-01T00:00:00  0 hours   2022-11-01T00:00:00  mbr000  SPP_DP     1010  281.505\n    3 │ 2022-11-01T00:00:00  0 hours   2022-11-01T00:00:00  mbr000  SPP_DP     1014  276.813\n    4 │ 2022-11-01T00:00:00  0 hours   2022-11-01T00:00:00  mbr000  SPP_DP     1015  280.019","category":"page"},{"location":"tarballs/#Reading-compressed-tar-balls-from-archive/extract","page":"Reading compressed tar balls from archive/extract","title":"Reading compressed tar balls from archive/extract","text":"","category":"section"},{"location":"tarballs/","page":"Reading compressed tar balls from archive/extract","title":"Reading compressed tar balls from archive/extract","text":"srun --qos=np --nodes=1 --ntasks-per-node=1 --cpus-per-task=256 --pty bash -i","category":"page"},{"location":"tarballs/","page":"Reading compressed tar balls from archive/extract","title":"Reading compressed tar balls from archive/extract","text":"julia --threads=256","category":"page"},{"location":"tarballs/","page":"Reading compressed tar balls from archive/extract","title":"Reading compressed tar balls from archive/extract","text":"julia> function untargz(dir) \n           vfldfiles = []\n           for (root, dirs, files) in walkdir(dir)\n               Threads.@threads  for tarfile in files \n                   tar_gz = open(joinpath(root,tarfile))\n                   tar = GzipDecompressorStream(tar_gz) \n                   dir = Tar.extract(tar) \n                   push!(vfldfiles, glob(\"vfld*\",dir) )                   \n               end\n           end\n           return reduce(vcat,vfldfiles)\n       end","category":"page"},{"location":"tarballs/","page":"Reading compressed tar balls from archive/extract","title":"Reading compressed tar balls from archive/extract","text":"julia> function readall(files)\n           nfiles = length(files )\n           dfs = [DataFrame() for _ in 1:nfiles]\n   \n           Threads.@threads for i  in 1:nfiles\n               dfs[i] = read_v(files[i],select=[:TT,:DD])\n           end \n           return dfs \n       end ","category":"page"},{"location":"tarballs/","page":"Reading compressed tar balls from archive/extract","title":"Reading compressed tar balls from archive/extract","text":"julia> dir = \"/scratch/fai/hm_home/SPP_DP/archive/extract/\"","category":"page"},{"location":"tarballs/","page":"Reading compressed tar balls from archive/extract","title":"Reading compressed tar balls from archive/extract","text":"julia> @time files = untargz(dir)","category":"page"},{"location":"tarballs/","page":"Reading compressed tar balls from archive/extract","title":"Reading compressed tar balls from archive/extract","text":"  2.680142 seconds (513.68 k allocations: 1.542 GiB)\n6909-element Vector{String}:\n \"/dev/shm/_tmpdir_.fars.37098181/jl_V3SxRT/vfldSPP_DPmbr0002022110103\"\n \"/dev/shm/_tmpdir_.fars.37098181/jl_V3SxRT/vfldSPP_DPmbr000202211010300\"\n \"/dev/shm/_tmpdir_.fars.37098181/jl_V3SxRT/vfldSPP_DPmbr000202211010301\"\n ...","category":"page"},{"location":"tarballs/","page":"Reading compressed tar balls from archive/extract","title":"Reading compressed tar balls from archive/extract","text":"julia> dfs = readall(files[1:2])  # Too avoid including compilation times in @time\n\njulia> @time dfs = readall(files);\n  7.783107 seconds (71.93 M allocations: 9.343 GiB, 24.83% gc time)","category":"page"},{"location":"tarballs/","page":"Reading compressed tar balls from archive/extract","title":"Reading compressed tar balls from archive/extract","text":"julia> reduce(vcat,dfs)\n14391447×7 DataFrame\n      Row │ validtime            leadtime  basetime             mbr     exp     DD        TT      \n          │ DateTime             Hour      DateTime             String  String  Float64   Float64 \n──────────┼───────────────────────────────────────────────────────────────────────────────────────\n        1 │ 2022-11-01T12:00:00  missing   2022-11-01T12:00:00  mbr000  SPP_DP  147.519   276.891\n        2 │ 2022-11-01T12:00:00  missing   2022-11-01T12:00:00  mbr000  SPP_DP  176.413   282.585\n        3 │ 2022-11-01T12:00:00  missing   2022-11-01T12:00:00  mbr000  SPP_DP  159.275   279.699\n        4 │ 2022-11-01T12:00:00  missing   2022-11-01T12:00:00  mbr000  SPP_DP  164.65    281.786\n        5 │ 2022-11-01T12:00:00  missing   2022-11-01T12:00:00  mbr000  SPP_DP  177.402   281.165\n        6 │ 2022-11-01T12:00:00  missing   2022-11-01T12:00:00  mbr000  SPP_DP  172.455   282.439\n        7 │ 2022-11-01T12:00:00  missing   2022-11-01T12:00:00  mbr000  SPP_DP  180.331   282.312\n        8 │ 2022-11-01T12:00:00  missing   2022-11-01T12:00:00  mbr000  SPP_DP  257.788   276.184\n        9 │ 2022-11-01T12:00:00  missing   2022-11-01T12:00:00  mbr000  SPP_DP  200.148   280.815\n       10 │ 2022-11-01T12:00:00  missing   2022-11-01T12:00:00  mbr000  SPP_DP  184.086   281.113\n       11 │ 2022-11-01T12:00:00  missing   2022-11-01T12:00:00  mbr000  SPP_DP  183.168   281.106\n       12 │ 2022-11-01T12:00:00  missing   2022-11-01T12:00:00  mbr000  SPP_DP  199.307   275.757\n       13 │ 2022-11-01T12:00:00  missing   2022-11-01T12:00:00  mbr000  SPP_DP  243.805   275.67\n       14 │ 2022-11-01T12:00:00  missing   2022-11-01T12:00:00  mbr000  SPP_DP  186.714   282.727\n       15 │ 2022-11-01T12:00:00  missing   2022-11-01T12:00:00  mbr000  SPP_DP  253.355   276.834\n       16 │ 2022-11-01T12:00:00  missing   2022-11-01T12:00:00  mbr000  SPP_DP   37.8926  277.466\n       17 │ 2022-11-01T12:00:00  missing   2022-11-01T12:00:00  mbr000  SPP_DP   63.7584  278.19\n       18 │ 2022-11-01T12:00:00  missing   2022-11-01T12:00:00  mbr000  SPP_DP  197.971   281.455\n       19 │ 2022-11-01T12:00:00  missing   2022-11-01T12:00:00  mbr000  SPP_DP  235.966   279.095\n       20 │ 2022-11-01T12:00:00  missing   2022-11-01T12:00:00  mbr000  SPP_DP  135.27    280.375\n       21 │ 2022-11-01T12:00:00  missing   2022-11-01T12:00:00  mbr000  SPP_DP  236.421   281.684\n       22 │ 2022-11-01T12:00:00  missing   2022-11-01T12:00:00  mbr000  SPP_DP  172.625   277.252\n       23 │ 2022-11-01T12:00:00  missing   2022-11-01T12:00:00  mbr000  SPP_DP  202.278   278.667\n       24 │ 2022-11-01T12:00:00  missing   2022-11-01T12:00:00  mbr000  SPP_DP  179.66    271.379\n       25 │ 2022-11-01T12:00:00  missing   2022-11-01T12:00:00  mbr000  SPP_DP  123.596   276.468\n       26 │ 2022-11-01T12:00:00  missing   2022-11-01T12:00:00  mbr000  SPP_DP  232.82    279.923\n    ⋮     │          ⋮              ⋮               ⋮             ⋮       ⋮        ⋮         ⋮\n 14391422 │ 2022-11-14T12:00:00  36 hours  2022-11-13T00:00:00  mbr006  SPP_DP  128.608   274.082\n 14391423 │ 2022-11-14T12:00:00  36 hours  2022-11-13T00:00:00  mbr006  SPP_DP  188.909   273.579\n 14391424 │ 2022-11-14T12:00:00  36 hours  2022-11-13T00:00:00  mbr006  SPP_DP   16.401   273.043\n 14391425 │ 2022-11-14T12:00:00  36 hours  2022-11-13T00:00:00  mbr006  SPP_DP   93.5847  273.954\n 14391426 │ 2022-11-14T12:00:00  36 hours  2022-11-13T00:00:00  mbr006  SPP_DP  309.237   273.661\n 14391427 │ 2022-11-14T12:00:00  36 hours  2022-11-13T00:00:00  mbr006  SPP_DP  182.641   271.498\n 14391428 │ 2022-11-14T12:00:00  36 hours  2022-11-13T00:00:00  mbr006  SPP_DP  351.191   271.666\n 14391429 │ 2022-11-14T12:00:00  36 hours  2022-11-13T00:00:00  mbr006  SPP_DP  227.327   270.912\n 14391430 │ 2022-11-14T12:00:00  36 hours  2022-11-13T00:00:00  mbr006  SPP_DP  321.095   269.722\n 14391431 │ 2022-11-14T12:00:00  36 hours  2022-11-13T00:00:00  mbr006  SPP_DP  287.22    267.921\n 14391432 │ 2022-11-14T12:00:00  36 hours  2022-11-13T00:00:00  mbr006  SPP_DP   87.7101  269.221\n 14391433 │ 2022-11-14T12:00:00  36 hours  2022-11-13T00:00:00  mbr006  SPP_DP  119.82    283.537\n 14391434 │ 2022-11-14T12:00:00  36 hours  2022-11-13T00:00:00  mbr006  SPP_DP  196.375   277.685\n 14391435 │ 2022-11-14T12:00:00  36 hours  2022-11-13T00:00:00  mbr006  SPP_DP  310.67    272.289\n 14391436 │ 2022-11-14T12:00:00  36 hours  2022-11-13T00:00:00  mbr006  SPP_DP   10.3838  273.653\n 14391437 │ 2022-11-14T12:00:00  36 hours  2022-11-13T00:00:00  mbr006  SPP_DP  116.82    283.335\n 14391438 │ 2022-11-14T12:00:00  36 hours  2022-11-13T00:00:00  mbr006  SPP_DP  142.703   282.335\n 14391439 │ 2022-11-14T12:00:00  36 hours  2022-11-13T00:00:00  mbr006  SPP_DP  119.827   272.979\n 14391440 │ 2022-11-14T12:00:00  36 hours  2022-11-13T00:00:00  mbr006  SPP_DP  351.493   273.122\n 14391441 │ 2022-11-14T12:00:00  36 hours  2022-11-13T00:00:00  mbr006  SPP_DP  236.685   278.609\n 14391442 │ 2022-11-14T12:00:00  36 hours  2022-11-13T00:00:00  mbr006  SPP_DP  202.424   275.526\n 14391443 │ 2022-11-14T12:00:00  36 hours  2022-11-13T00:00:00  mbr006  SPP_DP  131.878   284.335\n 14391444 │ 2022-11-14T12:00:00  36 hours  2022-11-13T00:00:00  mbr006  SPP_DP  182.742   273.506\n 14391445 │ 2022-11-14T12:00:00  36 hours  2022-11-13T00:00:00  mbr006  SPP_DP  166.391   271.373\n 14391446 │ 2022-11-14T12:00:00  36 hours  2022-11-13T00:00:00  mbr006  SPP_DP  114.608   283.882\n 14391447 │ 2022-11-14T12:00:00  36 hours  2022-11-13T00:00:00  mbr006  SPP_DP  136.411   283.082\n                                                                             14391395 rows omitted\n","category":"page"},{"location":"innerjoin/#Inner-joins","page":"Inner joins","title":"Inner joins","text":"","category":"section"},{"location":"innerjoin/","page":"Inner joins","title":"Inner joins","text":"\nmyshow(df) = show(df,truncate=10,show_row_number=false, display_size = (21, 90),maximum_columns_width = 15) \n\nusing VfldFiles, Glob, DataFrames\n\nvobsfiles = \"assets/vfldMEPS_prodmbr000201902170027\"\nvfldfiles = \"assets/vobs2019022015\"\nnothing #hide","category":"page"},{"location":"innerjoin/","page":"Inner joins","title":"Inner joins","text":"vobs_df =  read_v(vobsfiles,select=[:ID, :TT])\nvfld_df =  read_v(vfldfiles,select=[:ID, :TT]) \nnothing #hide","category":"page"},{"location":"innerjoin/","page":"Inner joins","title":"Inner joins","text":"df = innerjoin(vfld_df,vobs_df,on=[:ID,:validtime],makeunique=true)\nmyshow(df)  #hide","category":"page"},{"location":"plotting/#Plots","page":"Plots","title":"Plots","text":"","category":"section"},{"location":"plotting/","page":"Plots","title":"Plots","text":"using VfldFiles, Glob, Plots, DataFrames\n\nvobsfiles = glob(\"vobs*\",obs)\nvfldfiles = glob(\"vfld*\",MEPS_prod)\n\n\nobs_df = reduce(vcat, read_v.(vobsfiles,select=[:ID,:TT]))\nvfld_df = reduce(vcat, read_v.(vfldfiles,select=[:ID,:TT]))\n\nvobsfld = innerjoin(vfld_df,obs_df,on=[:ID,:validtime],makeunique=true)\n\ngdf=groupby(vobsfld,[:leadtime])\n\nfunction plotind(gdf,i)\n    p = scatter(gdf[i][:,:TT_1],gdf[i][:,:TT],legend=false,markersize=2);\n    title!(p,string((keys(gdf)[i]).leadtime))\n    plot!(p,[250, 300],[250, 300],linewidth=3)\n    xlabel!(p,\"obs\")\n    ylabel!(p,\"fc\")\n\n    return p \nend \n\n\nplot(plotind(gdf,1), plotind(gdf,3), plotind(gdf,5), plotind(gdf,11), layout=grid(2,2))","category":"page"},{"location":"plotting/","page":"Plots","title":"Plots","text":"(Image: )","category":"page"},{"location":"distributed/#Distributed","page":"Distributed","title":"Distributed","text":"","category":"section"},{"location":"distributed/","page":"Distributed","title":"Distributed","text":"E.g. on Atos ","category":"page"},{"location":"distributed/","page":"Distributed","title":"Distributed","text":"using Distributed, ClusterManagers, Glob\naddprocs_slurm(10)  # Will use the fractional queue by default   \n \n@everywhere using VfldFiles \n\nfiles = glob(\"vfld*\", \"/scratch/fai/vfld/SPP_DP\")\n\n@distributed vcat for file in files\n    read_v(file,select=[:TT,:DD,:FF])\nend","category":"page"},{"location":"#VfldFiles","page":"VfldFiles","title":"VfldFiles","text":"","category":"section"},{"location":"","page":"VfldFiles","title":"VfldFiles","text":"This packages exports a single function read_v which reads a vobs or vfld file and returns a dataframe  ","category":"page"},{"location":"#Installation","page":"VfldFiles","title":"Installation","text":"","category":"section"},{"location":"","page":"VfldFiles","title":"VfldFiles","text":"If you have added the Harmonie Registry","category":"page"},{"location":"","page":"VfldFiles","title":"VfldFiles","text":"pkg> add VfldFiles ","category":"page"},{"location":"vcat/#Concatenation","page":"Concatenation","title":"Concatenation","text":"","category":"section"},{"location":"vcat/","page":"Concatenation","title":"Concatenation","text":"myshow(df) = show(df,truncate=10,show_row_number=false, display_size = (21, 90),maximum_columns_width = 15) \nusing VfldFiles, Glob\n\nvfldfile = \"assets/vfldMEPS_prodmbr000201902170027\" \nvobsfile = \"assets/vobs2019022015\"\n","category":"page"},{"location":"vcat/","page":"Concatenation","title":"Concatenation","text":"To vertically concatenated dataframes use ","category":"page"},{"location":"vcat/","page":"Concatenation","title":"Concatenation","text":"vfld_df = read_v(vfldfile, select=[:ID,:TT])\nvobs_df = read_v(vobsfile, select=[:ID,:TT])\n\ndf = vcat(vfld_df,vobs_df,cols=:union)\nmyshow(df) #hide","category":"page"},{"location":"vcat/","page":"Concatenation","title":"Concatenation","text":"note: Note\nvobs dataframes have missing values for leadtime and basetime","category":"page"}]
}
